version: '3'
services:
    #数据库-master
    mysql57:
        image: ${MYSQL_IMAGE}
        environment:
            - MYSQL_ROOT_PASSWORD=${MYSQL_MASTER_ROOT_PASSWORD}
            #- MYSQL_USER=user
            #- MYSQL_PASSWORD=password
        volumes:
            #配置文件
            - ${MYSQL_MASTER_CONF}:/etc/mysql/my.cnf:ro
            #数据目录
            - ${MYSQL_MASTER_DATA}:/var/lib/mysql/:rw
            #查询日志文件
            #- ./logs/mysql/query_mysql.log:/var/logs/mysql/query.mysql.log:rw
            #慢查询日志文件
            #- ./logs/mysql/slow_mysql.log:/var/logs/mysql/slow.mysql.log:rw
        ports:
            - "${MYSQL_MASTER_PORT}:3306"
        container_name: mysql57
    #数据库-slave
    mysql57-slave:
        depends_on:
            - mysql57
        image: ${MYSQL_IMAGE}
        environment:
            - MYSQL_ROOT_PASSWORD=${MYSQL_SLAVE_ROOT_PASSWORD}
            #- MYSQL_USER=user
            #- MYSQL_PASSWORD=password
        volumes:
            #配置文件
            - ${MYSQL_SLAVE_CONF}:/etc/mysql/my.cnf:ro
            #数据目录
            - ${MYSQL_SLAVE_DATA}:/var/lib/mysql/:rw
            #查询日志文件
            #- ./logs/mysql/query_mysql.log:/var/logs/mysql/query.mysql.log:rw
            #慢查询日志文件
            #- ./logs/mysql/slow_mysql.log:/var/logs/mysql/slow.mysql.log:rw
        ports:
            - "${MYSQL_SLAVE_PORT}:3306"
        container_name: mysql57-slave
    redis:
        image: redis:5.0
        ports:
            - "${REDIS_PORT}:6379"
        volumes:
            - ${REDIS_DATA}:/data:rw
        container_name: redis
    # redis-slave:
    #     build: ${REDIS_SLAVE_DOCKERFILE_DIR}
    #     ports:
    #         - "${REDIS_SLAVE_PORT}:6379"
    #     volumes:
    #         - ${REDIS_SLAVE_CONF}:/usr/local/etc/redis/redis.conf:ro
    #         - ${REDIS_SLAVE_DATA}:/data:rw
    #     command: redis-server --appendonly ${REDIS_SLAVE_AOF_ON}
    #     container_name: redis-slave
    memcached:
        image: ${MEMCACHED_IMAGE}
        expose:
            - "11211"
        container_name: memcached
    php73:
        depends_on:
            - mysql57
            - redis
        build: ${PHP73_DOCKERFILE_DIR}
        restart: always
        volumes:
            - ${PHP73_WWW_CONF}:/usr/local/etc/php-fpm.d/www.conf:ro
            - ${WEB_ROOT}:/data/www/:rw
            - ${PHP73_CONF}:/usr/local/etc/php/php.ini:ro
            - /etc/localtime:/etc/localtime:ro
            - ./logs/php73/:/var/log/fpm-php.www.log:rw
        expose:
            - "9000"
        cap_add:
            - SYS_PTRACE
        container_name: php73

    php72:
        depends_on:
            - mysql57
            - redis
        build: ${PHP72_DOCKERFILE_DIR}
        restart: always
        volumes:
            - ${PHP72_WWW_CONF}:/usr/local/etc/php-fpm.d/www.conf:ro
            - ${WEB_ROOT}:/data/www/:rw
            - ${PHP72_CONF}:/usr/local/etc/php/php.ini:ro
            - /etc/localtime:/etc/localtime:ro
            - ./logs/php72/:/var/log/fpm-php.www.log:rw
        expose:
            - "9000"
        cap_add:
            - SYS_PTRACE
        container_name: php72
#    php71:
#        depends_on:
#            - mysql57
#            - redis
#        build: ${PHP71_DOCKERFILE_DIR}
#        restart: always
#        volumes:
#            - ${PHP71_WWW_CONF}:/usr/local/etc/php-fpm.d/www.conf:ro
#            - ${WEB_ROOT}:/data/www/:rw
#            - ${PHP71_CONF}:/usr/local/etc/php/php.ini:ro
#            - /etc/localtime:/etc/localtime:ro
#        expose:
#            - "9000"
#        cap_add:
#            - SYS_PTRACE
#        container_name: php71
#    php70:
#        depends_on:
#            - mysql57
#            - redis
#        build: ${PHP70_DOCKERFILE_DIR}
#        restart: always
#        volumes:
#            - ${PHP70_WWW_CONF}:/usr/local/etc/php-fpm.d/www.conf:ro
#            - ${WEB_ROOT}:/data/www/:rw
#            - ${PHP70_CONF}:/usr/local/etc/php/php.ini:ro
#            - /etc/localtime:/etc/localtime:ro
#        expose:
#            - "9000"
#        cap_add:
#            - SYS_PTRACE
#        container_name: php70
#    php56:
#        depends_on:
#            - mysql57
#            - redis
#        build: ${PHP56_DOCKERFILE_DIR}
#        restart: always
#        volumes:
#            - ${PHP56_WWW_CONF}:/usr/local/etc/php-fpm.d/www.conf:ro
#            - ${WEB_ROOT}:/data/www/:rw
#            - ${PHP56_CONF}:/usr/local/etc/php/php.ini:ro
#            - /etc/localtime:/etc/localtime:ro
#        expose:
#            - "9000"
#        cap_add:
#            - SYS_PTRACE
#        container_name: php56
#    php55:
#        depends_on:
#            - mysql57
#            - redis
#        build: ${PHP55_DOCKERFILE_DIR}
#        restart: always
#        volumes:
#            - ${PHP55_WWW_CONF}:/usr/local/etc/php-fpm.d/www.conf:ro
#            - ${WEB_ROOT}:/data/www/:rw
#            - ${PHP55_CONF}:/usr/local/etc/php/php.ini:ro
#            - /etc/localtime:/etc/localtime:ro
#        expose:
#            - "9000"
#        cap_add:
#            - SYS_PTRACE
#        container_name: php55
    #服务器nginx(openresty)
    openresty:
        image: ${OPENRESTY_IMAGE}
        ports:
            - "${OPENRESTY_HTTP_PORT}:80"
            - "${OPENRESTY_HTTPS_PORT}:443"
        volumes:
            #主配置
            - ${OPENRESTY_NGINX_CONF}:/usr/local/openresty/nginx/conf/nginx.conf:ro
            #虚拟主机配置
            - ${OPENRESTY_CONF_DIR}:/etc/nginx/conf.d/:rw
            #lua脚本目录
            - ${OPENRESTY_SCRIPTS}:/usr/local/openresty/nginx/src/:ro
            #公共配置目录
            - ${OPENRESTY_GENERAL_CONF_DIR}:/usr/local/openresty/nginx/general/:ro
            #web目录
            - ${WEB_ROOT}:/data/www/:rw
            #证书目录
            - ${OPENRESTY_CERTS_DIR}:/etc/letsencrypt/:ro
            #日志目录
            - ${OPENRESTY_LOGS_DIR}:/var/log/nginx/:rw
            #可用于简单身份认证的auth_basic密码文件(默认:password)
            - ${OPENRESTY_PASSWD}:/etc/openresty/.htpasswd:ro
        restart: always
        container_name: openresty
    #mysql管理
    phpmyadmin:
        depends_on:
            - mysql57
        image: ${PMA_IMAGE}
        environment:
            - PMA_HOST=mysql57
        ports:
            - "${PMA_PORT}:80"
        container_name: phpmyadmin
    #redis管理
    phpredisadmin:
        build: ${PRA_DOCKERFILE_DIR}
        environment:
            # - ADMIN_USER=admin
            # - ADMIN_PASS=admin
            - REDIS_1_HOST=redis
            - REDIS_1_PORT=${PRA_REDIS_PORT}
        links:
            - redis
        ports:
            - "${PRA_PORT}:80"
        container_name: phpredisadmin
    #文档系统
#    showdoc:
#        build: ./src/showdoc
#        volumes:
#        #项目文件
#            - ./showdoc/:/var/www/html/:rw
#        ports:
#            - "${SHOWDOC_PORT}:80"
#        container_name: showdoc
#    #下载工具
#    you-get:
#        build: ./src/you-get
#        container_name: you-get
#        stdin_open: true
#        tty: true
#        #下载目录
#        volumes:
#            - "${DOWNLOAD_DIR}:/data/download:rw"
#    #代理ip池
#    proxy_pool:
#        volumes:
#            - ./src/proxy_pool:/usr/src/app
#        ports:
#            - "${PP_PORT}:5010"
#        links:
#            - redis
#        build: ./src/proxy_pool/Docker
#        container_name: proxy_pool
#    #下载器
#    h5ai:
#        image: bixidock/h5ai
#        volumes:
#            - ${DOWNLOAD_DIR}:/var/www:rw
#        restart: always
#        container_name: h5ai
#    aria2:
#        image: wahyd4/aria2-ui:h5ai
#        ports:
#            - "${ARIA2_HTTP_PORT}:80"
#            - "${ARIA2_HTTPS_PORT}:443"
#            - "${ARIA2_RPC_PORT}:6800"
#        volumes:
#            - ${DOWNLOAD_DIR}:/var/www:rw
#        # volumes:
#        #   - /some_folder:/root/conf/key
#        #   - ~/test/aria2.conf:/root/conf/aria2.conf
#        environment:
#            - DOMAIN=${ARIA2_DOMAIN}
#            - PLEX_CLAIM=${ARIA2_PLEX_CLAIM}
#            # - SSL=true
#            # - RPC_SECRET=Hello
#            - ARIA2_USER=${ARIA2_USER}
#            - ARIA2_PWD=${ARIA2_PWD}
#            - ENABLE_AUTH=${ARIA2_ENABLE_AUTH}
#        links:
#            - h5ai:file-manager
#        restart: always
#        container_name: aria2
    es:
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.7.0 
        environment:
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        volumes:
            - ${ES_DATA_DIR}:/usr/share/elasticsearch/data/:rw 
            - ${ES_CONF_DIR}:/usr/share/elasticsearch/config/elasticsearch.yml:ro
            - /etc/localtime:/etc/localtime:ro
        ports:
            - "${ES_HTTP_PORT}:9200"
            - "${ES_CLUSTER_PORT}:9300"
        container_name: es
    fb:
        image: docker.elastic.co/beats/filebeat:6.7.0
        volumes:
            - ${FB_CONF}:/usr/share/filebeat/filebeat.yml:ro
            - ${OPENRESTY_LOGS_DIR}:/var/log/nginx/:ro
            - /etc/localtime:/etc/localtime:ro
        container_name: fb
        depends_on:
            - logstash
    logstash:
        image: docker.elastic.co/logstash/logstash:6.7.0
        volumes:
            - ${LS_CONF}:/usr/share/logstash/config/logstash.yml:ro
            - ${LS_PIPELINE}:/usr/share/logstash/pipeline/:ro
            - /etc/localtime:/etc/localtime:ro
        ports:
            - "${LS_PORT}:5044"
            - "${LS_HTTP_PORT}:9600"
        environment:
            LS_JAVA_OPTS: "-Xmx256m -Xms256m"
        container_name: logstash
        depends_on:
            - es
    kibana:
        image: docker.elastic.co/kibana/kibana-oss:6.7.0
        environment:
#            SERVER_NAME: kibana.example.org
            ELASTICSEARCH_URL: http://es:9200
            ES_JAVA_OPTS: -Xms512m -Xmx512m
        ports:
            - "${KIBANA_PORT}:5601"
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ${KIBANA_CONF}:/usr/share/kibana/config:ro
        container_name: kibana
        depends_on:
            - es
    metricbeat:
        image: docker.elastic.co/beats/metricbeat:6.7.0
        depends_on:
            - logstash
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./src/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
        container_name: metricbeat

networks:
  default:
    driver: bridge
